[{"/home/kristina/webdev-course/solo-project-cats/client/src/index.js":"1","/home/kristina/webdev-course/solo-project-cats/client/src/App.js":"2","/home/kristina/webdev-course/solo-project-cats/client/src/reportWebVitals.js":"3","/home/kristina/webdev-course/solo-project-cats/client/src/components/ImageList.js":"4","/home/kristina/webdev-course/solo-project-cats/client/src/components/Images.js":"5","/home/kristina/webdev-course/solo-project-cats/client/src/components/PostImageForm.js":"6","/home/kristina/webdev-course/solo-project-cats/client/src/utils/imageService.js":"7","/home/kristina/webdev-course/solo-project-cats/client/src/components/Register.js":"8","/home/kristina/webdev-course/solo-project-cats/client/src/utils/userService.js":"9","/home/kristina/webdev-course/solo-project-cats/client/src/components/Login.js":"10","/home/kristina/webdev-course/solo-project-cats/client/src/utils/auth.js":"11"},{"size":535,"mtime":1663838537576,"results":"12","hashOfConfig":"13"},{"size":2345,"mtime":1664341772861,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1663838537576,"results":"15","hashOfConfig":"13"},{"size":338,"mtime":1664318538161,"results":"16","hashOfConfig":"13"},{"size":239,"mtime":1663958445805,"results":"17","hashOfConfig":"13"},{"size":2557,"mtime":1664331270504,"results":"18","hashOfConfig":"13"},{"size":465,"mtime":1664314175997,"results":"19","hashOfConfig":"13"},{"size":1823,"mtime":1664304582358,"results":"20","hashOfConfig":"13"},{"size":854,"mtime":1664341676457,"results":"21","hashOfConfig":"13"},{"size":1542,"mtime":1664300198331,"results":"22","hashOfConfig":"13"},{"size":342,"mtime":1664276594855,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xp65lb",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/kristina/webdev-course/solo-project-cats/client/src/index.js",[],[],"/home/kristina/webdev-course/solo-project-cats/client/src/App.js",["60"],[],"/home/kristina/webdev-course/solo-project-cats/client/src/reportWebVitals.js",[],[],"/home/kristina/webdev-course/solo-project-cats/client/src/components/ImageList.js",["61"],[],"import PostImageForm from './PostImageForm';\r\nimport Image from './Images';\r\n\r\n\r\n\r\nfunction ImageList({image, setImages}) {\r\n    return(\r\n        <div className=\"image-list-container\">\r\n            {/* <PostImageForm /> */}\r\n            {image.map((i) => <Image pic={i}/>)}\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default ImageList;","/home/kristina/webdev-course/solo-project-cats/client/src/components/Images.js",["62"],[],"function Image({pic}) {\r\n    const baseUrl = 'http://localhost:3030/images/';\r\n    return(\r\n        <div className=\"image-container\">\r\n            <img src={baseUrl + pic}></img>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Image;","/home/kristina/webdev-course/solo-project-cats/client/src/components/PostImageForm.js",["63","64","65"],[],"import { postImage } from \"../utils/imageService\";\r\nimport ReactCrop, {  Crop } from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\n//import { publicDecrypt } from \"crypto\";\r\n//import { filename } from \"../../../server/controller/resize\";\r\n\r\nfunction PostImageForm(props) {\r\n\r\n    const changeHandler = () => {\r\n        const image = document.getElementById('pic').files[0];\r\n        if (image) {\r\n            const newImage = document.getElementById(\"crop-image\");\r\n            newImage.src = URL.createObjectURL(image);\r\n            localStorage.setItem('myImage', newImage.src);\r\n        }\r\n    }\r\n\r\n    const clickHandler = (event) => {\r\n        event.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('file', event.target.pic.files[0]);\r\n        console.log(event.target.pic.files[0]);\r\n        for(var pair of formData.entries()) {\r\n            console.log(pair[0]+', '+pair[1]);\r\n          }\r\n        postImage(formData)\r\n        .then(filename => {\r\n\r\n            //props.image.push(filename.filename)\r\n            props.setImages(prevFile => {\r\n                return [\r\n                    filename.filename, ...prevFile,\r\n                    \r\n                ]\r\n            })\r\n\r\n            // console.log(filename.filename);\r\n            // return props.image.unshift(filename.filename)\r\n        }\r\n           \r\n            \r\n            //props.image.push(filename.filename)\r\n            // props.setImages(prevFile => {\r\n            //     return {\r\n            //         filename, ...prevFile,\r\n                    \r\n            //     }\r\n            // })\r\n        );\r\n        props.cb();\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"black fullscreen\"></div>\r\n            <div className=\"post-image-form fullscreen\">\r\n                <div id=\"post\">\r\n                <button className=\"close\" onClick={() =>props.cb()}></button>\r\n                    <form id=\"form\" onSubmit={event => clickHandler(event)} encType=\"multipart/form-data\">\r\n                        <label for=\"pic\" class=\"custom-file-upload\">Choose a file</label>\r\n                        <input type=\"file\" name=\"pic\" id=\"pic\" onChange={changeHandler} required></input>\r\n                        <img src=\"\" id=\"crop-image\" width=\"400px\" height=\"400px\"></img>\r\n                        <button id=\"post-button\">Post</button>\r\n                    </form>\r\n                    \r\n                </div>\r\n           \r\n            </div>\r\n\r\n\r\n        </div>   \r\n    )\r\n}\r\n\r\nexport default PostImageForm;","/home/kristina/webdev-course/solo-project-cats/client/src/utils/imageService.js",[],[],"/home/kristina/webdev-course/solo-project-cats/client/src/components/Register.js",[],[],"/home/kristina/webdev-course/solo-project-cats/client/src/utils/userService.js",[],[],"/home/kristina/webdev-course/solo-project-cats/client/src/components/Login.js",[],[],"/home/kristina/webdev-course/solo-project-cats/client/src/utils/auth.js",[],[],{"ruleId":"66","severity":1,"message":"67","line":8,"column":18,"nodeType":"68","messageId":"69","endLine":8,"endColumn":25},{"ruleId":"66","severity":1,"message":"70","line":1,"column":8,"nodeType":"68","messageId":"69","endLine":1,"endColumn":21},{"ruleId":"71","severity":1,"message":"72","line":5,"column":13,"nodeType":"73","endLine":5,"endColumn":38},{"ruleId":"66","severity":1,"message":"74","line":2,"column":8,"nodeType":"68","messageId":"69","endLine":2,"endColumn":17},{"ruleId":"66","severity":1,"message":"75","line":2,"column":22,"nodeType":"68","messageId":"69","endLine":2,"endColumn":26},{"ruleId":"71","severity":1,"message":"72","line":62,"column":25,"nodeType":"73","endLine":62,"endColumn":82},"no-unused-vars","'profile' is defined but never used.","Identifier","unusedVar","'PostImageForm' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ReactCrop' is defined but never used.","'Crop' is defined but never used."]